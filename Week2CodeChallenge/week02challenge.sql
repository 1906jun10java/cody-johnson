-- DROP ------------------------------------------------------------------------
DROP TABLE DEPARTMENT;
DROP TABLE EMPLOYEE;

-- TABLES ----------------------------------------------------------------------
CREATE TABLE DEPARTMENT(
    DEPARTMENT_ID NUMBER(16) PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(32)
);
CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID NUMBER(16) PRIMARY KEY,
    EMP_FIRSTNAME VARCHAR2(32),
    EMP_LASTNAME VARCHAR2(32),
    EMP_EMAIL VARCHAR2(32),
    SALARY NUMBER(9,2),
    DEPARTMENT_ID NUMBER(16),
    
    CONSTRAINT FK_EMPLOYEE_DEPARTMENT
    FOREIGN KEY (DEPARTMENT_ID)
    REFERENCES DEPARTMENT(DEPARTMENT_ID)
);

-- SEQUENCES -------------------------------------------------------------------
CREATE SEQUENCE DEPARTMENT_SEQ
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE EMPLOYEE_SEQ
START WITH 1000
INCREMENT BY 1;

-- TRIGGERS --------------------------------------------------------------------
CREATE OR REPLACE TRIGGER BEFORE_INSERT_DEPT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    IF :NEW.DEPARTMENT_ID IS NULL THEN
        SELECT DEPARTMENT_SEQ.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
    END IF;
END;

CREATE OR REPLACE TRIGGER BEFORE_INSERT_EMP
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
    IF :NEW.EMPLOYEE_ID IS NULL THEN
        SELECT EMPLOYEE_SEQ.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
    END IF;
END;

-- PROCEDURES ------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE INSERT_DEPARTMENT(
    P_DEPARTMENT_ID IN NUMBER,
    P_DEPARTMENT_NAME IN VARCHAR2)
AS
BEGIN
    INSERT INTO DEPARTMENT VALUES(
        P_DEPARTMENT_ID,
        P_DEPARTMENT_NAME);
    COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE INSERT_EMPLOYEE(
    P_EMPLOYEE_ID IN NUMBER,
    P_EMPLOYEE_FIRSTNAME IN VARCHAR2,
    P_EMPLOYEE_LASTNAME IN VARCHAR2,
    P_EMPLOYEE_EMAIL IN VARCHAR2,
    P_SALARY IN NUMBER,
    P_DEPARTMENT_ID IN NUMBER)
AS
BEGIN
    INSERT INTO EMPLOYEE VALUES(
        P_EMPLOYEE_ID,
        P_EMPLOYEE_FIRSTNAME,
        P_EMPLOYEE_LASTNAME,
        P_EMPLOYEE_EMAIL,
        P_SALARY,
        P_DEPARTMENT_ID);
    COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE CALC_AVG_DEPT_SALARY(
    P_DEPT_ID IN NUMBER)
AS
DECLARE
    AVERAGESALARY NUMBER;
BEGIN
    SELECT AVG(SALARY) INTO AVERAGESALARY
    FROM EMPLOYEE
    WHERE DEPARTMENT_ID = P_DEPT_ID;
END;
/

SET SERVEROUTPUT ON;
DECLARE
    AVERAGESALARY NUMBER(9,2);
BEGIN
    CALC_AVG_DEPT_SALARY(1, AVERAGESALARY);
    dbms_output.put_line(AVERAGESALARY);
END;
/
